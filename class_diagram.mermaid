classDiagram
    class User {
        +string id
        +string username
        +string passwordHash
        +string role
        +string lastLogin
        +string[] activityLogs
        +User(username, password, role)
        +validatePassword(password) bool
        +updatePassword(newPassword) bool
        +logActivity(action) void
    }
    
    class Auth {
        +generateToken(user) string
        +verifyToken(token) User
        +hashPassword(password) string
        +comparePassword(password, hash) bool
        +isAuthorized(user, action) bool
    }
    
    class ScoutingForm {
        +string id
        +string seasonId
        +FormField[] fields
        +bool isActive
        +ScoutingForm(seasonId, fields)
        +validate() bool
        +render() FormComponent
        +getFieldValue(fieldId) any
        +setFieldValue(fieldId, value) void
    }
    
    class FormField {
        +string id
        +string type
        +string label
        +any defaultValue
        +ValidationRule[] rules
        +FormField(type, label, defaultValue, rules)
        +validate(value) bool
        +render() FieldComponent
    }
    
    class ValidationRule {
        +string type
        +any value
        +string errorMessage
        +ValidationRule(type, value, errorMessage)
        +validate(fieldValue) bool
    }
    
    class Season {
        +string id
        +string name
        +string startDate
        +string endDate
        +ScoutingForm formTemplate
        +bool isActive
        +Season(name, startDate, endDate)
        +activate() void
        +deactivate() void
        +setFormTemplate(formTemplate) void
    }
    
    class Match {
        +string id
        +string seasonId
        +string matchNumber
        +string eventId
        +string[] teams
        +string createdBy
        +string createdAt
        +Match(seasonId, matchNumber, eventId, teams)
    }
    
    class ScoutingEntry {
        +string id
        +string matchId
        +string teamId
        +string scoutId
        +Map~string, any~ data
        +string createdAt
        +string updatedAt
        +ScoutingEntry(matchId, teamId, scoutId, data)
        +validateData(scoutingForm) bool
        +exportToCSV() string
    }
    
    class Team {
        +string id
        +string teamNumber
        +string teamName
        +Map~string, any~ attributes
        +Team(teamNumber, teamName, attributes)
    }
    
    class DataManager {
        +saveUser(user) void
        +getUser(id) User
        +getAllUsers() User[]
        +saveSeason(season) void
        +getSeason(id) Season
        +getActiveSeason() Season
        +saveMatch(match) void
        +getMatch(id) Match
        +getMatchesByEvent(eventId) Match[]
        +saveScoutingEntry(entry) void
        +getScoutingEntry(id) ScoutingEntry
        +getEntriesByTeam(teamId) ScoutingEntry[]
        +exportToCSV(entries) string
        +backupData() void
        +restoreData(backupFile) void
    }
    
    class DashboardService {
        +calculateTeamStats(teamId) Map~string, any~
        +generateTeamReport(teamId) Report
        +compareTeams(teamIds) ComparisonReport
        +getPerformanceTrends(teamId) TrendData
    }
    
    class APIService {
        +handleLogin(username, password) Response
        +handleSubmitForm(formData) Response
        +handleExportData(criteria) Response
        +handleConfigUpdate(config) Response
        +handleUserManagement(action, userData) Response
        +initializeSystem() void
    }
    
    class PWAService {
        +registerServiceWorker() void
        +checkForUpdates() UpdateInfo
        +syncOfflineData() void
        +getCachedData() Map
        +clearCache() void
    }
    
    class LoggingService {
        +logError(error) void
        +logInfo(message) void
        +logWarning(message) void
        +getLogsByDate(date) Log[]
        +getErrorLogs() Log[]
    }
    
    User "1" -- "*" ScoutingEntry : creates
    ScoutingForm "1" -- "*" FormField : contains
    FormField "1" -- "*" ValidationRule : uses
    Season "1" -- "1" ScoutingForm : has template
    Match "1" -- "*" ScoutingEntry : has
    Team "1" -- "*" ScoutingEntry : is subject of
    DataManager -- User : manages
    DataManager -- Season : manages
    DataManager -- Match : manages
    DataManager -- ScoutingEntry : manages
    DataManager -- Team : manages
    Auth -- User : authenticates
    DashboardService -- ScoutingEntry : analyzes
    DashboardService -- Team : analyzes
    APIService -- Auth : uses
    APIService -- DataManager : uses
    APIService -- DashboardService : uses
    PWAService -- DataManager : syncs
    LoggingService -- APIService : monitors
